name: Publish Analyzer Package

on:
  push:
    tags:
      - 'analyzer-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.1)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.13.1'
          
      - name: Configure npm registry for pnpm
        run: pnpm config set registry https://registry.npmjs.org/
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Code quality check
        run: pnpm run lint --filter=@cute-me-on-repos/sst-analyzer
        
      - name: Build package
        run: pnpm run build --filter=@cute-me-on-repos/sst-analyzer
        
      - name: Update version (if workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd packages/analyzer
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          
      - name: Publish to npm
        run: |
          cd packages/analyzer
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          pnpm publish --access public --no-git-checks
          
      - name: Get published version
        id: get-version
        run: |
          cd packages/analyzer
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          
      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
      - name: Create git tag and commit
        run: |
          VERSION="${{ steps.get-version.outputs.version }}"
          git tag "v$VERSION" -m "Release @cute-me-on-repos/sst-analyzer@$VERSION"
          git push origin "v$VERSION"
          echo "âœ… Created and pushed tag v$VERSION after successful publish"
